/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-16 04:10:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n");
      out.write("<meta name=\"description\" content=\"\" />\n");
      out.write("<meta name=\"author\" content=\"\" />\n");
      out.write("<title>Shop Homepage - Start Bootstrap Template</title>\n");
      out.write("<!-- Core theme CSS (includes Bootstrap)-->\n");
      out.write("<link href=\"././resources/css/styles.css\" rel=\"stylesheet\" />\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!-- Navigation-->\n");
      out.write("   <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n");
      out.write("       <div class=\"container px-4 px-lg-5\">\n");
      out.write("           <a class=\"navbar-brand\" href=\"#!\">CAL</a>\n");
      out.write("           <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button>\n");
      out.write("           <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("               <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4\">\n");
      out.write("                   <li class=\"nav-item\"><a class=\"nav-link active\" aria-current=\"page\" href=\"");
      out.print(request.getContextPath() );
      out.write("\">Home</a></li>\n");
      out.write("                   <li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      out.print(request.getContextPath() );
      out.write("/healthInfo.do\">건강계산기</a>\n");
      out.write("                   </li>\n");
      out.write("                   <li class=\"nav-item dropdown\">\n");
      out.write("                       <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" href=\"\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">상품</a>\n");
      out.write("                       <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n");
      out.write("                       	   <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath() );
      out.write("/listProduct.do\">모든상품</a></li>\n");
      out.write("                           <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath() );
      out.write("/selectListProduct.do?category=2\">단백질프로틴</a></li>\n");
      out.write("                           <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath() );
      out.write("/selectListProduct.do?category=1\">닭가슴살</a></li>\n");
      out.write("                           <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath() );
      out.write("/selectListProduct.do?category=3\">도시락</a></li>\n");
      out.write("                       </ul>\n");
      out.write("                   </li>\n");
      out.write("               </ul>\n");
      out.write("               <form class=\"d-flex\">\n");
      out.write("                   <button class=\"btn btn-outline-dark\" type=\"submit\">\n");
      out.write("                       <i class=\"bi-cart-fill me-1\"></i>\n");
      out.write("                       Cart\n");
      out.write("                       <span class=\"badge bg-dark text-white ms-1 rounded-pill\">0</span>\n");
      out.write("                   </button>\n");
      out.write("                   \n");
      out.write("                                   \n");
      out.write("                   <button class=\"btn btn-outline-dark\" type=\"submit\">\n");
      out.write("                   <a href = \"");
      out.print(request.getContextPath() );
      out.write("/LoginPage.do\">로그인</a>\n");
      out.write("                   </button>\n");
      out.write("               </form>\n");
      out.write("           </div>\n");
      out.write("       </div>\n");
      out.write("   </nav>\n");
      out.write("   <!-- Header-->\n");
      out.write("   <header class=\"bg-dark py-5\">\n");
      out.write("       <div class=\"container px-4 px-lg-5 my-5\">\n");
      out.write("           <div class=\"text-center text-white\">\n");
      out.write("               <h1 class=\"display-4 fw-bolder\">Shop in style</h1>\n");
      out.write("               <p class=\"lead fw-normal text-white-50 mb-0\">With this shop hompeage template</p>\n");
      out.write("           </div>\n");
      out.write("       </div>\n");
      out.write("   </header>\n");
      out.write("   \n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
