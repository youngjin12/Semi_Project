/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-18 11:18:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.uni.member.model.vo.Member;

public final class menu2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.uni.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

Member loginUser = (Member) session.getAttribute("loginUser");
String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("<meta name=\"description\" content=\"\" />\r\n");
      out.write("<meta name=\"author\" content=\"\" />\r\n");
      out.write("<title>Shop Homepage - Start Bootstrap Template</title>\r\n");
      out.write("<!-- Core theme CSS (includes Bootstrap)-->\r\n");
      out.write("<link href=\"././resources/css/styles.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- Navigation-->\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("		<div class=\"container px-4 px-lg-5\">\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"#!\">CAL</a>\r\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n");
      out.write("				aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("				aria-label=\"Toggle navigation\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("				<ul class=\"navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4\">\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("						aria-current=\"page\" href=\"");
      out.print(request.getContextPath());
      out.write("\">Home</a></li>\r\n");
      out.write("					<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("						href=\"");
      out.print(request.getContextPath());
      out.write("/healthInfo.do\">건강계산기</a></li>\r\n");
      out.write("					<li class=\"nav-item dropdown\"><a\r\n");
      out.write("						class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" href=\"\"\r\n");
      out.write("						role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">상품</a>\r\n");
      out.write("						<ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n");
      out.write("							<li><a class=\"dropdown-item\"\r\n");
      out.write("								href=\"");
      out.print(request.getContextPath());
      out.write("/listProduct.do\">모든상품</a></li>\r\n");
      out.write("							<li><a class=\"dropdown-item\"\r\n");
      out.write("								href=\"");
      out.print(request.getContextPath());
      out.write("/selectListProduct.do?category=2\">단백질프로틴</a></li>\r\n");
      out.write("							<li><a class=\"dropdown-item\"\r\n");
      out.write("								href=\"");
      out.print(request.getContextPath());
      out.write("/selectListProduct.do?category=1\">닭가슴살</a></li>\r\n");
      out.write("							<li><a class=\"dropdown-item\"\r\n");
      out.write("								href=\"");
      out.print(request.getContextPath());
      out.write("/selectListProduct.do?category=3\">도시락</a></li>\r\n");
      out.write("						</ul></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<form class=\"d-flex\">\r\n");
      out.write("					<button class=\"btn btn-outline-dark\" type=\"submit\">\r\n");
      out.write("						<i class=\"bi-cart-fill me-1\"></i> \r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/cartList.do\">Cart </a>\r\n");
      out.write("						<span class=\"badge bg-dark text-white ms-1 rounded-pill\">0</span>\r\n");
      out.write("					</button>\r\n");
      out.write("\r\n");
      out.write("					");

					if (loginUser == null) {
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<button class=\"btn btn-outline-dark\" type=\"submit\">\r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/LoginPage.do\">로그인</a>\r\n");
      out.write("					</button>\r\n");
      out.write("				\r\n");
      out.write("				");

				} else {
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				");

				if (loginUser != null && loginUser.getUserId().equals("admin")) {
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"btns\" align=\"center\">\r\n");
      out.write("					<a href=\"");
      out.print(request.getContextPath());
      out.write("/managerPage.do\">관리자페이지</a>\r\n");
      out.write("					<a href=\"");
      out.print(request.getContextPath());
      out.write("/logoutMember.do\">로그아웃</a>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				");

				} else {
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div id=\"userInfo\">\r\n");
      out.write("					<b style=\"color: blue;\">");
      out.print(loginUser.getUserName());
      out.write(" 님 </b> 어서오세요.\r\n");
      out.write("					<br>\r\n");
      out.write("					<br>\r\n");
      out.write("					<div class=\"btns\" align=\"center\">\r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/mypageMember.do\">마이페이지</a>\r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/logoutMember.do\">로그아웃</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<!-- Header-->\r\n");
      out.write("	<header class=\"bg-dark py-3\">\r\n");
      out.write("		<div class=\"container px-4 px-lg-5 my-1\">\r\n");
      out.write("			<div class=\"text-center text-white\">\r\n");
      out.write("				<h1 class=\"display-6 fw-bolder\" style=\"color: white;\">칼로리를 부탁해</h1>\r\n");
      out.write("				<p class=\"lead fw-normal text-white-50 mb-0\">With this shop\r\n");
      out.write("					hompeage template</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
