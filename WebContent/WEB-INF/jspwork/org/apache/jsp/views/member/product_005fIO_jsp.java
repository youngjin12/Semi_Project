/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-20 08:26:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.uni.product_IO.model.vo.*;

public final class product_005fIO_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.uni.product_IO.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("     ");

       ArrayList<Product_IO> list = (ArrayList<Product_IO>)request.getAttribute("list");
     

    
      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	.outer{\n");
      out.write("		width:1000px;\n");
      out.write("		height:800px;\n");
      out.write("		background:black;\n");
      out.write("		color:white;\n");
      out.write("		margin:auto;\n");
      out.write("		margin-top:50px;\n");
      out.write("	}\n");
      out.write("	.listArea{\n");
      out.write("		border:1px solid white;\n");
      out.write("		text-align:center;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menu.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"outer\">\n");
      out.write("		<br>\n");
      out.write("		\n");
      out.write("		<h2 align=\"center\">상품관리</h2>\n");
      out.write("		<br>\n");
      out.write("		<table align=\"center\">\n");
      out.write("		<tr>\n");
      out.write("		            <td width=\"70\">상품번호</td>\n");
      out.write("					<td width=\"70\">상품수량</td>\n");
      out.write("						\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("		<form action=\"");
      out.print(request.getContextPath());
      out.write("/iogogo.do\" method=\"post\">\n");
      out.write("		<td><input type=\"number\" value=\"1\" id=\"pnum\" name=\"pnum\"></input></td>\n");
      out.write("		<td><input type=\"number\" value=\"0\" id=\"pid\" name=\"pid\"></input></td>\n");
      out.write("					\n");
      out.write("					<td><button >입고및출고</button></td>\n");
      out.write("						</form>\n");
      out.write("						</tr>\n");
      out.write("		</table>\n");
      out.write("		<table class=\"listArea\" align=\"center\">\n");
      out.write("		\n");
      out.write("		<form  action=\"");
      out.print(request.getContextPath());
      out.write("/iogogo.do\" method=\"post\" >\n");
      out.write("					\n");
      out.write("			<thead>\n");
      out.write("				<tr>\n");
      out.write("					<th width=\"100\">상품번호</th>\n");
      out.write("					<th width=\"300\">상품이름</th>\n");
      out.write("					<th width=\"100\">상품수량</th>	\n");
      out.write("									\n");
      out.write("				</tr>\n");
      out.write("			<thead>\n");
      out.write("			<tbody>\n");
      out.write("				");
if(list.isEmpty()){ 
      out.write("\n");
      out.write("				<tr>\n");
      out.write("					<td colspan=\"6\">조회된 상품 없습니다.</td>\n");
      out.write("				</tr>\n");
      out.write("				");
}else{ 
      out.write("\n");
      out.write("					");
 for(Product_IO p : list){ 
      out.write("\n");
      out.write("					<tr>\n");
      out.write("						<td>");
      out.print( p.getpId() );
      out.write("</td>\n");
      out.write("						<td>");
      out.print( p.getpName() );
      out.write("</td>\n");
      out.write("						<td>");
      out.print( p.getPnum());
      out.write("</td>						\n");
      out.write("					</tr>\n");
      out.write("					\n");
      out.write("					");
} 
      out.write("\n");
      out.write("					\n");
      out.write("				");
} 
      out.write("\n");
      out.write("			\n");
      out.write("			</tbody>\n");
      out.write("		</table>\n");
      out.write("			\n");
      out.write("		<br><br>\n");
      out.write("		\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
