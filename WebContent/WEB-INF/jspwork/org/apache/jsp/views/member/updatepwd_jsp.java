/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-28 05:05:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.uni.member.model.vo.*;

public final class updatepwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.uni.member.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write(' ');
      out.write(' ');

	 Member m = (Member)request.getAttribute("loginUser");
	
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("#update{\n");
      out.write("	    width:600px;\n");
      out.write("		height:300px;\n");
      out.write("	    border: 2px solid black;\n");
      out.write("		margin:auto;\n");
      out.write("		margin-top:15%;\n");
      out.write("\n");
      out.write("}\n");
      out.write("#pwupdate{\n");
      out.write("width: 50%;\n");
      out.write("hieght:20%;\n");
      out.write("}\n");
      out.write("#updateadrress{\n");
      out.write("width: 50%;\n");
      out.write("hieght:20%;\n");
      out.write("}\n");
      out.write("#pwd{\n");
      out.write("margin-top:70px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body{\n");
      out.write("background-image:url('https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20150404_201%2Fbbilla_1428082120293qFxQp_JPEG%2F%25C7%25CF%25B3%25AA%25BE%25B2%25B9%25D9%25C5%25C1%25C8%25AD%25B8%25E9_05_1920x1080_20150402-01.jpg&type=a340')\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menu.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write(" <div id=\"update\" align=\"center\">\n");
      out.write("<table>\n");
      out.write("<tr>\n");
      out.write(" <input id =\"pwupdate\"  type=\"button\" value=\"비밀번호 변경\" style=\"background-color: aqua;\"></input>\n");
      out.write(" <input id =\"updateadrress\"  type=\"button\" value=\"주소 변경\" onClick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/updateaddress.do'\"></input>\n");
      out.write(" </tr>\n");
      out.write(" </table>\n");
      out.write(" <form id=\"updatePwdForm\" action=\"");
      out.print( request.getContextPath() );
      out.write("/updatePwdMember.do\" method=\"post\">\n");
      out.write("		<table id=\"pwd\">\n");
      out.write("			<tr>\n");
      out.write("				<td><label>현재 비밀번호</label>\n");
      out.write("				<th><input type=\"password\" name=\"userPwd\" id=\"userPwd\" ></th>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td><label>변경할 비밀번호</label></td>\n");
      out.write("				<th><input type=\"password\" name=\"newPwd\" ></th>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td><label>변경할 비밀번호 확인</label></td>\n");
      out.write("				<th><input type=\"password\" name=\"checkPwd\" ></th>\n");
      out.write("			</tr>\n");
      out.write("		</table>\n");
      out.write("		\n");
      out.write("		<br>\n");
      out.write("		<br>\n");
      out.write("		\n");
      out.write("		<div class=\"btns\" align=\"center\">\n");
      out.write("			<button  type=\"button\" onclick=\"fnCheckPwd()\">변경하기</button>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("	<script>\n");
      out.write("		function fnCheckPwd(){\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			var userPwd = $(\"#userPwd\");\n");
      out.write("			var newPwd = $(\"input[name='newPwd']\");\n");
      out.write("			var checkPwd = $(\"input[name='checkPwd']\");\n");
      out.write("			\n");
      out.write("			if(userPwd.val().trim() === \"\" || newPwd.val().trim() === \"\" || checkPwd.val().trim() === \"\"){\n");
      out.write("				alert(\"비밀번호를 입력하세요\")\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			if(newPwd.val() != checkPwd.val()){\n");
      out.write("				alert(\"비밀번호가 다릅니다.\")\n");
      out.write("				checkPwd.val('');\n");
      out.write("				checkPwd.focus();\n");
      out.write("				return false;\n");
      out.write("				\n");
      out.write("			}\n");
      out.write("			if(userPwd.val().trim() != \"\" && newPwd.val() == checkPwd.val()){\n");
      out.write("			window.alert(\"비밀번호가 변경돼었어요 ( ✪ワ✪)ノʸᵉᵃʰᵎ \");\n");
      out.write("			$(\"#updatePwdForm\").submit();\n");
      out.write("			}\n");
      out.write("			 \n");
      out.write("			        \n");
      out.write("			\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		 \n");
      out.write("		\n");
      out.write("	</script>\n");
      out.write(" </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
