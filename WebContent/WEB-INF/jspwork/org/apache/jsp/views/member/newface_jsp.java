/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-18 02:54:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newface_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("   \n");
      out.write("  \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("input{\n");
      out.write("width:500px;\n");
      out.write("height:50px;\n");
      out.write("}\n");
      out.write("#waddress{\n");
      out.write("width:70px;\n");
      out.write("height:50px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"outer\">\n");
      out.write("		<br>\n");
      out.write("		\n");
      out.write("		<h2 align=\"center\">계정만들기</h2>\n");
      out.write("		\n");
      out.write("		<form id=\"newFace\" action=\"");
      out.print(request.getContextPath() );
      out.write("/insertMember.do\" method=\"post\">\n");
      out.write("			<table align=\"center\" width=\"750px\">\n");
      out.write("				<tr>	\n");
      out.write("				<td>아이디</td>			\n");
      out.write("					<td><input type=\"text\"  name=\"userId\"  placeholder=\"아이디를 입력하세요\" width=\"300px\" required></td>\n");
      out.write("					\n");
      out.write("						\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>	\n");
      out.write("				<td>비밀번호</td>					\n");
      out.write("					<td><input type=\"password\"  name=\"userPwd\" placeholder=\"비밀번호를 입력하세요\" required></td>\n");
      out.write("					<td></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>	\n");
      out.write("				<td>비밀번호 확인</td>				\n");
      out.write("					<td><input type=\"password\"  name=\"checkPwd\" placeholder=\"비밀번호 확인!\" required></td>\n");
      out.write("					<td><label id = \"pwdResult\"></label></td>\n");
      out.write("				</tr>	\n");
      out.write("				<tr>	\n");
      out.write("				<td>이름</td>			\n");
      out.write("					<td><input type=\"text\"  name=\"userName\" placeholder=\"이름을 입력하세요\" required></td>\n");
      out.write("					<td></td>\n");
      out.write("				</tr>\n");
      out.write("				\n");
      out.write("				<tr>\n");
      out.write("					<td>주소</td>	\n");
      out.write("					<td><input type=\"text\" name=\"address\" id=\"address\" placeholder=\"주소를 입력하세요\"></td>\n");
      out.write("					<td><input type=\"button\" id=\"waddress\" value =\"주소입력!\" ></input></td>\n");
      out.write("		\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td>전화번호(-포함)</td>	\n");
      out.write("					<td><input type=\"tel\" maxlength=\"13\" name=\"phone\" placeholder=\"전화번호 입력해주세요(-입력)010-1234-5678\"></td>\n");
      out.write("					<td></td>\n");
      out.write("				</tr>	\n");
      out.write("				\n");
      out.write("			</table>\n");
      out.write("			<br>\n");
      out.write("			<div class=\"btns\" align=\"center\">				\n");
      out.write("				<button type=\"submit\" id=\"joinBtn\">가입하기</button>\n");
      out.write("			\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("	<script>\n");
      out.write("	   window.onload = function(){\n");
      out.write("    document.getElementById(\"waddress\").addEventListener(\"click\", function(){ \n");
      out.write("       new daum.Postcode({\n");
      out.write("       oncomplete: function(data) { //선택시 입력값 세팅\n");
      out.write("           document.getElementById(\"address\").value = data.address; // 주소 넣기        \n");
      out.write("       }\n");
      out.write("   }).open();\n");
      out.write("});\n");
      out.write("}\n");
      out.write("	\n");
      out.write("	function joinValidate(){\n");
      out.write("		\n");
      out.write("		if(!(/^[a-z][a-z\\d]{3,11}$/i.test($(\"#enrollForm input[name=userId]\").val()))){\n");
      out.write("			$(\"#enrollForm input[name=userId]\").focus();\n");
      out.write("	        return false;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		if($(\"#enrollForm input[name=userPwd]\").val() != $(\"#enrollForm input[name=checkPwd]\").val()){\n");
      out.write("			$(\"#pwdResult\").text(\"비밀번호 불일치\").css(\"color\", \"red\");\n");
      out.write("			return false;			\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		 if(!(/^[가-힣]{2,}$/.test($(\"#enrollForm input[name=userName]\").val()))){\n");
      out.write("			 $(\"#enrollForm input[name=userName]\").focus();\n");
      out.write("	        return false;\n");
      out.write("		 }\n");
      out.write("		 \n");
      out.write("		 return true;\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
