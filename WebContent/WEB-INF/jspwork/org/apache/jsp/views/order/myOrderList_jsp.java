/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-03-28 12:55:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.uni.order.model.vo.Order;
import java.util.ArrayList;

public final class myOrderList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/SemiProject/PleaseCal/pleaseCal_Backup/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/SemiProject/PleaseCal/pleaseCal_Backup/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1647475557049L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.uni.order.model.vo.Order");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Order> list = (ArrayList<Order>)request.getAttribute("list");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	.contents-order {\r\n");
      out.write("	\r\n");
      out.write("		box-sizing:border-box;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.card mb-3 {\r\n");
      out.write("	\r\n");
      out.write("		display:inline-block;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#img {\r\n");
      out.write("	\r\n");
      out.write("		width:400px;\r\n");
      out.write("		height:400px;\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.card-body {\r\n");
      out.write("		border: solid 1px lightgray;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menu.jsp", out, false);
      out.write("\r\n");
      out.write("	<br><br><br><br><br><br><br><br><br><br><br>\r\n");
      out.write("	<div class=\"contents-order\">\r\n");
      out.write("	<div style=\"width:600px\">\r\n");
      out.write("	");
if (!list.isEmpty()){ 
      out.write("\r\n");
      out.write("		");
for(Order o : list){
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"card mb-3\" >\r\n");
      out.write("		  		<h3 class=\"card-header\">");
      out.print(o.getOrderDate());
      out.write(" 주문</h3>\r\n");
      out.write("		  		<div class=\"card-body\">\r\n");
      out.write("				    <h5 class=\"card-title\">상품명 :");
      out.print(o.getPName() );
      out.write("</h5>\r\n");
      out.write("				    <h6 class=\"card-subtitle text-muted\">주문번호 :");
      out.print(o.getOrderNo());
      out.write("</h6>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				    \r\n");
      out.write("				    <div><img id=\"img\" src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/image/");
      out.print(o.getPiName() );
      out.write("\" alt=\"상품이미지\"></div>\r\n");
      out.write("			    \r\n");
      out.write("		  	    <div class=\"card-body\">\r\n");
      out.write("		  	    	\r\n");
      out.write("			   		<p class=\"card-text\">금액 : ");
      out.print(o.getPPrice() );
      out.write("</p>\r\n");
      out.write("			    </div>\r\n");
      out.write("			\r\n");
      out.write("			    <ul class=\"list-group list-group-flush\">\r\n");
      out.write("				    <li class=\"list-group-item\">수량 : ");
      out.print(o.getPAmount() );
      out.write("</li>\r\n");
      out.write("				    <li class=\"list-group-item\">배송상태 : ");
      out.print(o.getDState() );
      out.write("</li>\r\n");
      out.write("				    <li class=\"list-group-item\">배송요청사항 : ");
      out.print(o.getDeliveryRequest() );
      out.write("</li>\r\n");
      out.write("			    </ul>\r\n");
      out.write("			    <div>\r\n");
      out.write("			    	<button>후기작성</button>\r\n");
      out.write("			    </div>\r\n");
      out.write("			    \r\n");
      out.write("			</div>\r\n");
      out.write("			<br>\r\n");
      out.write("		");
 }
      out.write('\r');
      out.write('\n');
      out.write('	');
} 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
